{"version":3,"sources":["components/Dialogs/Dialog.module.css","components/Avatar/Avatar.module.css","components/Sidebar/Sidebar.module.css","components/Sidebar/FriendList/FriendList.module.css","assets/img/user.png","assets/img/preloader.svg","components/Profile/MyPosts/Post/Post.module.css","components/Profile/ProfileInfo/ProfileInfo.module.css","components/Sidebar/Navbar/Navbar.module.css","api/api.js","redux/profile_reducer.js","redux/dialogs_reducer.js","redux/users_reducer.js","redux/auth_reducer.js","redux/app_reducer.js","redux/redux_store.js","components/Avatar/Avatar.jsx","components/common/FormsControls/FormsControls.jsx","utils/validators/validators.js","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Dialogs.jsx","hoc/withAuthRedirect.js","components/Dialogs/DialogsContainer.jsx","components/News/News.jsx","components/Music/Music.jsx","components/Settings/Settings.jsx","components/Sidebar/Navbar/Navbar.jsx","components/Sidebar/FriendList/Friend/Friend.jsx","components/Sidebar/FriendList/FriendList.jsx","components/Sidebar/FriendList/FriendListContainer.jsx","components/Sidebar/Sidebar.jsx","components/Pagination/Pagination.jsx","components/Users/Users.jsx","components/common/Preloader/Preloader.jsx","components/Users/UsersContainer.jsx","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/ProfileInfo/ProfileStatus/ProfileStatus.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx","components/Header/Header.jsx","components/Header/HeaderContainer.jsx","components/Login/Login.jsx","components/Login/LoginContainer.jsx","App.js","index.js","components/common/FormsControls/FormControls.module.css","components/Dialogs/DialogItem/DialogItem.module.css","components/Users/Users.module.css","components/Header/Header.module.css","components/Profile/MyPosts/MyPosts.module.css"],"names":["module","exports","instance","axios","baseURL","withCredentials","headers","UserApi","currentPage","pageSize","get","then","response","data","uid","post","resultCode","delete","AuthApi","email","password","rememberMe","captcha","ProfileApi","userId","status","put","initialState","avatar","posts","id","message","likesCount","profile","isFetching","profileReducer","state","action","type","newPost","setUserProfile","toggleIsFetcing","setUserStatus","dialogs","name","messages","text","dialogsReducer","stateCopy","find","el","map","d","users","totalUserCount","followInProgress","usersReducer","u","followed","page","count","filter","setUsers","toggleIsFetching","toggleFollowInProgress","login","isAuth","isCaptchaReq","authReducer","payload","setAuthUserData","toggleIsCaptchaReq","Authorize","dispatch","profileToggleIsFetching","initialized","appReducer","reducers","combineReducers","profilePage","dialogPage","usersPage","auth","form","formReducer","app","store","createStore","applyMiddleware","thunkMiddleware","Avatar","props","className","classes","src","alt","FormControl","input","meta","elementType","hasError","touched","error","formControl","React","createElement","TextArea","Input","required","value","undefined","maxLengthCreator","maxLength","length","maxLengthValid","DialogReduxForm","reduxForm","onSubmit","handleSubmit","dialogForm","Field","placeholder","Text","component","validate","DialogItem","createRef","dialog","avaUrl","to","Dialogs","dialogsElements","key","savedTemplate","updateAnswerMessage","sendMessage","mapStateToProps","compose","connect","Component","RedirectComponent","this","News","Music","Settings","Navbar","nav","item","activeClassName","active","Friend","FriendList","friends","slice","friend","flist","FriendListContainer","Sidebar","Pagination","pages","startPage","pageCount","lastPage","i","push","p","styles","selectedPage","onClick","e","onPageChanged","Users","Math","ceil","photos","small","userPhoto","userAvatar","disabled","includes","unfollowT","followT","Preloader","preloader","UserContainer","pageNumber","loadPage","followAC","unfollowAC","items","totalCount","Post","NewPostReduxForm","MyPosts","postElements","postsBlock","formData","MyPostsContainer","newPostText","addPost","ProfileStatus","editMode","actEditMode","setState","deactEditMode","updateStatus","onStatusChange","currentTarget","prevProps","prevState","onDoubleClick","onChange","autoFocus","onBlur","ProfileInfo","contacts","Object","values","descriptionBlock","large","fullName","lookingForAJob","lookingForAJobDescription","Profile","ProfileContainer","match","params","myId","history","loadProfile","loadStatus","withRouter","Header","header","container","loginBlock","Logout","HeaderContainer","profileIsFetching","LoginReduxForm","formSummaryError","Login","LoginThunk","stopSubmit","_error","App","initialize","path","render","DialogsContainer","UsersContainer","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e69f05bf.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialog_dialogs__3U8wK\",\"dialogsItem\":\"Dialog_dialogsItem__lYF7P\",\"active\":\"Dialog_active__2Ox4D\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"avatar\":\"Avatar_avatar__7xsDB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Sidebar_nav__2Erhf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"flist\":\"FriendList_flist__1I95e\"};","module.exports = __webpack_public_path__ + \"static/media/user.b3e90dfe.png\";","module.exports = __webpack_public_path__ + \"static/media/preloader.5374226b.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__2Evqs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__1FdpA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Navbar_item__3r9fM\",\"active\":\"Navbar_active__O0tyB\"};","import * as axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/',\r\n    withCredentials: true,\r\n    headers: {\r\n        \"API-KEY\": \"13cfaf89-045b-4562-a42a-04fc576de7b4\"\r\n    }\r\n});\r\n\r\nexport const UserApi = {\r\n    getUsers(currentPage = 1, pageSize = 10) {\r\n        return instance.get(`users?page=${currentPage}&count=${pageSize}`).then(response => response.data);\r\n    },\r\n\r\n    followUser(uid) {\r\n        return instance.post(`follow/${uid}`).then(response => response.data.resultCode);\r\n    },\r\n\r\n    unfollowUser(uid) {\r\n        return instance.delete(`follow/${uid}`).then(response => response.data.resultCode);\r\n    }\r\n}\r\n\r\nexport const AuthApi = {\r\n    Authorize() {\r\n        return instance.get(`auth/me`).then(response => response.data);\r\n    },\r\n\r\n    Login(email, password, rememberMe, captcha) {\r\n        return instance.post(`auth/login`, {email, password, rememberMe, captcha}).then(response => response.data);\r\n    },\r\n\r\n    Logout() {\r\n        return instance.delete(`auth/login`).then(response => response.data);\r\n    }\r\n}\r\n\r\nexport const ProfileApi = {\r\n    getProfile(userId) {\r\n        return instance.get(`profile/${userId}`).then(response => response.data);\r\n    },\r\n\r\n    getStatus(userId) {\r\n        return instance.get(`profile/status/${userId}`).then(response => response.data);\r\n    },\r\n\r\n    updateStatus(status) {\r\n        return instance.put(`profile/status`, {status}).then(response => response.data.resultCode);\r\n    }\r\n}\r\n\r\nexport const Security = {\r\n    getCapthca() {\r\n        return instance.get(`security/get-c`).then(response => response.data);\r\n    }\r\n}","import {ProfileApi} from \"../api/api\";\r\n\r\nconst ADD_POST = \"ADD_POST\";\r\nconst SET_USER_PROFILE = \"SET_USER_PROFILE\";\r\nconst TOGGLE_IS_FETCHING = \"TOGGLE_IS_FETCHING\";\r\nconst SET_USER_STATUS = \"SET_USER_STATUS\";\r\n\r\nlet initialState = {\r\n    avatar: \"https://store.playstation.com/store/api/chihiro/00_09_000/container/IL/en/999/EP0149-CUSA09988_00-AV00000000000001/1553560094000/image?w=240&h=240&bg_color=000000&opacity=100&_version=00_09_000\",\r\n    posts: [\r\n        {id: 1, message: \"Hi, HW R U?\", likesCount: 15},\r\n        {id: 2, message: \"It's my first post\", likesCount: 30},\r\n        {id: 3, message: \"Bla bla bla\", likesCount: 30},\r\n        {id: 4, message: \"Da da\", likesCount: 30}\r\n    ],\r\n    profile: null,\r\n    isFetching: false,\r\n    status: \"\"\r\n};\r\n\r\nconst profileReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case ADD_POST:\r\n            let newPost = {\r\n                id: 5,\r\n                message: '',\r\n                likesCount: 0\r\n            };\r\n            return {\r\n                ...state,\r\n                posts: [...state.posts, newPost],\r\n            };\r\n        case SET_USER_PROFILE:\r\n            return {...state, profile: action.profile};\r\n        case TOGGLE_IS_FETCHING:\r\n            return {...state, isFetching: action.isFetching}\r\n        case SET_USER_STATUS:\r\n            return {...state, status: action.status}\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default profileReducer;\r\nexport const addPost = () => ({type: ADD_POST});\r\nexport const setUserProfile = (profile) => ({type: SET_USER_PROFILE, profile});\r\nexport const toggleIsFetcing = (isFetching) => ({type: TOGGLE_IS_FETCHING, isFetching});\r\nexport const setUserStatus = (status) => ({type: SET_USER_STATUS, status})\r\n\r\nexport const loadProfile = (userId) => {\r\n    return (dispatch) => {\r\n        ProfileApi.getProfile(userId)\r\n            .then(response => {\r\n                dispatch(setUserProfile(response));\r\n            });\r\n    }\r\n}\r\n\r\nexport const loadStatus = (userId) => {\r\n    return (dispatch) => {\r\n        ProfileApi.getStatus(userId)\r\n            .then(response => {\r\n                dispatch(setUserStatus(response));\r\n            });\r\n    }\r\n}\r\n\r\nexport const updateStatus = (status) => {\r\n    return (dispatch) => {\r\n        ProfileApi.updateStatus(status)\r\n            .then(response => {\r\n                if (response === 0)\r\n                    dispatch(setUserStatus(status));\r\n            });\r\n    }\r\n}","const SEND_MESSAGE = \"SEND_MESSAGE\";\r\n\r\nlet initialState = {\r\n    dialogs: [\r\n        {\r\n            id: 1,\r\n            name: \"Dimych\",\r\n            avatar: \"https://i.pinimg.com/originals/0c/a9/e2/0ca9e28dcb12dc698cfd2beda6d6fa64.jpg\",\r\n            messages: [{id: 1, text: \"Hi\"}]\r\n        },\r\n        {\r\n            id: 2,\r\n            name: \"Andrey\",\r\n            avatar: \"https://whatsism.com/uploads/posts/2018-07/1530546770_rmk_vdjbx10.jpg\",\r\n            messages: [{id: 2, text: \"HW R U?\"}]\r\n        },\r\n        {\r\n            id: 3,\r\n            name: \"Viktor\",\r\n            avatar: \"https://www.meme-arsenal.com/memes/bf0296e8bfa92558d0ca180289194068.jpg\",\r\n            messages: [{id: 3, text: \"Yo\"}]\r\n        },\r\n        {\r\n            id: 4,\r\n            name: \"Valera\",\r\n            avatar: \"https://avatars.mds.yandex.net/get-pdb/1352825/a5f8fbd7-515e-49f8-81d6-be55a2daac92/s600\",\r\n            messages: [{id: 4, text: \"WU?\"}]\r\n        },\r\n        {\r\n            id: 5,\r\n            name: \"Sveta\",\r\n            avatar: \"https://www.meme-arsenal.com/memes/b877babd9c07f94b952c7f152c4e264e.jpg\",\r\n            messages: [{id: 5, text: \"Good morning\"}]\r\n        },\r\n        {\r\n            id: 6,\r\n            name: \"Sasha\",\r\n            avatar: \"https://archilab.online/images/1/123.jpg\",\r\n            messages: [{id: 6, text: \"Hey\"}]\r\n        }\r\n    ]\r\n};\r\n\r\nconst dialogsReducer = (state = initialState, action) => {\r\n    let stateCopy = {\r\n        ...state,\r\n        dialogs: [...state.dialogs]\r\n    };\r\n    let dialog = stateCopy.dialogs.find((el) => el.id === action.id);\r\n    switch (action.type) {\r\n        case SEND_MESSAGE:\r\n            return {\r\n                ...state,\r\n                dialogs: state.dialogs.map (d => {\r\n                    if (d.id === action.userId) {\r\n                        return {\r\n                            ...d,\r\n                            messages: [...d.messages, {id: 7, text: \"\"}],\r\n                        }\r\n                    }\r\n                    return d;\r\n                })\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default dialogsReducer;\r\nexport const sendMessage = (userId) => ({type: SEND_MESSAGE, userId});","import {UserApi} from \"../api/api\";\r\n\r\nconst FOLLOW = 'FOLLOW';\r\nconst UNFOLLOW = 'UNFOLLOW';\r\nconst SET_USERS = 'SET_USERS';\r\nconst SET_CURRENT_PAGE = 'SET_CURRENT_PAGE';\r\nconst SET_TOTAL_USER_COUNT = 'SET_TOTAL_USER_COUNT';\r\nconst TOGGLE_IS_FETCHING = 'TOGGLE_IS_FETCHING';\r\nconst TOGGLE_FOLLOW_IN_PROGRESS = 'TOGGLE_FOLLOW_IN_PROGRESS';\r\n\r\nlet initialState = {\r\n    users: [],\r\n    pageSize: 5,\r\n    totalUserCount: 0,\r\n    currentPage: 1,\r\n    isFetching: false,\r\n    followInProgress: []\r\n}\r\n\r\nconst usersReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case FOLLOW:\r\n            return {\r\n                ...state,\r\n                users: state.users.map((u) => {\r\n                    return u.id === action.userId ? {...u, followed: true} : u;\r\n                })\r\n            };\r\n        case UNFOLLOW:\r\n            return {\r\n                ...state,\r\n                users: state.users.map((u) => {\r\n                    return u.id === action.userId ? {...u, followed: false} : u;\r\n                })\r\n            };\r\n        case SET_USERS:\r\n            return {...state, users: [...action.users]};\r\n        case SET_CURRENT_PAGE:\r\n            return {...state, currentPage: action.page};\r\n        case SET_TOTAL_USER_COUNT:\r\n            return {...state, totalUserCount: action.count};\r\n        case TOGGLE_IS_FETCHING:\r\n            return {...state, isFetching: action.isFetching};\r\n        case TOGGLE_FOLLOW_IN_PROGRESS:\r\n            return {\r\n                ...state,\r\n                followInProgress: action.isFetching ?\r\n                    [...state.followInProgress, action.userId] :\r\n                    state.followInProgress.filter((id) => id != action.userId)\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default usersReducer;\r\nexport const followAC = (userId) => ({type: FOLLOW, userId});\r\nexport const unfollowAC = (userId) => ({type: UNFOLLOW, userId});\r\nexport const setUsers = (users) => ({type: SET_USERS, users});\r\nexport const setCurrentPage = (page) => ({type: SET_CURRENT_PAGE, page});\r\nexport const setTotalUserCount = (count) => ({type: SET_TOTAL_USER_COUNT, count});\r\nexport const toggleIsFetching = (isFetching) => ({type: TOGGLE_IS_FETCHING, isFetching});\r\nexport const toggleFollowInProgress = (isFetching, userId) => ({type: TOGGLE_FOLLOW_IN_PROGRESS, isFetching, userId});\r\n\r\nexport const loadPage = (pageNumber, pageSize) => {\r\n    return (dispatch) => {\r\n        dispatch(setCurrentPage(pageNumber));\r\n        dispatch(setUsers([]));\r\n        dispatch(toggleIsFetching(true));\r\n        UserApi.getUsers(pageNumber, pageSize).then(data => {\r\n            dispatch(toggleIsFetching(false));\r\n            dispatch(setUsers(data.items));\r\n            return data;\r\n        }).then(data => dispatch(setTotalUserCount(data.totalCount)));\r\n    }\r\n}\r\n\r\nexport const followT = (userId) => {\r\n    return (dispatch) => {\r\n        dispatch(toggleFollowInProgress(true, userId));\r\n        UserApi.followUser(userId)\r\n            .then(response => {\r\n                if (response === 0) dispatch(followAC(userId));\r\n                dispatch(toggleFollowInProgress(false, userId));\r\n            });\r\n    }\r\n}\r\n\r\nexport const unfollowT = (userId) => {\r\n    return (dispatch) => {\r\n        dispatch(toggleFollowInProgress(true, userId));\r\n        UserApi.unfollowUser(userId)\r\n            .then(response => {\r\n                if (response === 0) dispatch(unfollowAC(userId));\r\n                dispatch(toggleFollowInProgress(false, userId));\r\n            });\r\n    }\r\n}","import {AuthApi, ProfileApi} from \"../api/api\";\r\nimport {toggleIsFetcing as profileToggleIsFetching, setUserProfile} from \"./profile_reducer\";\r\nimport {stopSubmit} from \"redux-form\";\r\n\r\nconst SET_USER_DATA = \"SET_USER_DATA\";\r\nconst TOGGLE_IS_CAPTCHA_REQ = \"TOGGLE_IS_CAPTCHA_REQ\";\r\n\r\nlet initialState = {\r\n    userId: null,\r\n    email: null,\r\n    login: null,\r\n    isAuth: false,\r\n    isCaptchaReq: true\r\n};\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_USER_DATA:\r\n            return {\r\n                ...state,\r\n                ...action.payload\r\n            }\r\n        case TOGGLE_IS_CAPTCHA_REQ:\r\n            return {\r\n                ...state,\r\n                isCaptchaReq: action.isCaptchaReq\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default authReducer;\r\nexport const setAuthUserData = (userId, email, login, isAuth) => ({\r\n    type: SET_USER_DATA, payload:\r\n        {userId, email, login, isAuth}\r\n});\r\nexport const toggleIsCaptchaReq = (isCaptchaReq) => ({type: TOGGLE_IS_CAPTCHA_REQ, isCaptchaReq});\r\n\r\nconst Authorize = (dispatch) => {\r\n    return AuthApi.Authorize()\r\n        .then(response => {\r\n            if (response.resultCode === 0) {\r\n                const {id, email, login} = response.data;\r\n                dispatch(setAuthUserData(id, email, login, true));\r\n                dispatch(profileToggleIsFetching(true));\r\n                return ProfileApi.getProfile(id);\r\n            }\r\n        })\r\n        .then(response => {\r\n            dispatch(setUserProfile(response));\r\n            dispatch(profileToggleIsFetching(false));\r\n        });\r\n}\r\n\r\nexport const AuthorizeThunk = () => (dispatch) => Authorize(dispatch);\r\n\r\n\r\nexport const Login = (email, password, rememberMe = 0, captcha) => {\r\n    return (dispatch) => {\r\n        AuthApi.Login(email, password, rememberMe, captcha)\r\n            .then(response => {\r\n                if (response.resultCode === 0) {\r\n                    dispatch(toggleIsCaptchaReq(false));\r\n                    return Authorize(dispatch);\r\n                } else if (response.resultCode === 10) {\r\n                    dispatch(stopSubmit(\"login\", {_error: \"Common Error\"}));\r\n                } else {\r\n                    const message = response.messages.length > 0 ? response.messages[0] : \"Some Error\";\r\n                    dispatch(stopSubmit(\"login\", {_error: message}));\r\n                }\r\n            })\r\n    }\r\n}\r\n\r\nexport const Logout = () => {\r\n    return (dispatch) => {\r\n        AuthApi.Logout()\r\n            .then(response => {\r\n                if (response.resultCode === 0) {\r\n                    dispatch(setAuthUserData(null, null, null, false));\r\n                }\r\n            })\r\n    }\r\n}","import {AuthorizeThunk as Authorize} from \"./auth_reducer\";\r\n\r\nconst INITIALIZE = \"INITIALIZE\";\r\n\r\nconst initialState = {\r\n    initialized: false\r\n}\r\n\r\nconst appReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case INITIALIZE:\r\n            return {\r\n                ...state,\r\n                initialized: true\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default appReducer;\r\nconst initialize = () => ({type: INITIALIZE});\r\n\r\nexport const initializeThunk = () => (dispatch) => {\r\n    dispatch(Authorize()).then(() => {\r\n        dispatch(initialize());\r\n    })\r\n}","import {applyMiddleware, combineReducers, createStore} from \"redux\";\r\nimport profileReducer from \"./profile_reducer\";\r\nimport dialogsReducer from \"./dialogs_reducer\";\r\nimport usersReducer from \"./users_reducer\";\r\nimport authReducer from \"./auth_reducer\";\r\nimport thunkMiddleware from \"redux-thunk\";\r\nimport { reducer as formReducer } from \"redux-form\";\r\nimport appReducer from \"./app_reducer\";\r\n\r\nlet reducers = combineReducers({\r\n    profilePage: profileReducer,\r\n    dialogPage: dialogsReducer,\r\n    usersPage: usersReducer,\r\n    auth: authReducer,\r\n    form: formReducer,\r\n    app: appReducer\r\n});\r\n\r\nlet store = createStore(reducers, applyMiddleware(thunkMiddleware));\r\n\r\nexport default store;","import React from \"react\";\r\nimport classes from \"./Avatar.module.css\";\r\n\r\nconst Avatar = (props) => {\r\n    return (\r\n        <div className={classes.avatar}>\r\n            <img  src={props.src} alt=\"\"/>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Avatar;","import React from \"react\";\r\nimport classes from \"./FormControls.module.css\";\r\n\r\nconst FormControl = ({input, meta, elementType, ...props}) => {\r\n    const hasError = meta.touched && meta.error;\r\n    return <div className={classes.formControl + \" \" + (hasError && classes.error)}>\r\n        <div>\r\n            {React.createElement(elementType, {...input, ...props})}\r\n        </div>\r\n        {hasError && <span>{meta.error}</span>}\r\n    </div>\r\n}\r\n\r\nexport const TextArea = (props) => {\r\n    return <FormControl elementType=\"textarea\" {...props}/>\r\n}\r\n\r\nexport const Input = (props) => {\r\n    return <FormControl elementType=\"input\" {...props}/>\r\n}","export const required = value => {\r\n    return value ? undefined : \"Field is required\";\r\n}\r\n\r\nexport const maxLengthCreator = (maxLength) => (value) => {\r\n    return value && value.length > maxLength ? \"Max length is 30 symbols\" : undefined;\r\n}","import React from \"react\";\r\nimport classes from \"./DialogItem.module.css\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport Avatar from \"../../Avatar/Avatar\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {TextArea} from \"../../common/FormsControls/FormsControls\";\r\nimport {maxLengthCreator, required} from \"../../../utils/validators/validators\";\r\n\r\nconst maxLengthValid = maxLengthCreator(50);\r\n\r\nconst DialogItemForm = (props) => {\r\n    return <div>\r\n        <form onSubmit={props.handleSubmit} className={classes.dialogForm}>\r\n            <div>\r\n                <Field placeholder={Text} name={\"message\"} component={TextArea}\r\n                validate={[required, maxLengthValid]}/>\r\n            </div>\r\n            <div>\r\n                <button>Send</button>\r\n            </div>\r\n        </form>\r\n    </div>\r\n}\r\n\r\nconst DialogReduxForm = reduxForm({\r\n    form: 'dialog'\r\n})(DialogItemForm);\r\n\r\nconst DialogItem = (props) => {\r\n    let answerText = React.createRef();\r\n\r\n    const onSubmit = (formData) => {\r\n\r\n    }\r\n\r\n    return (\r\n        <div className={classes.dialog}>\r\n            <Avatar src={props.avaUrl}/>\r\n            <NavLink className={classes.name} to={props.id}>{props.name}</NavLink>\r\n            <div className={classes.message}>{props.messages[props.messages.length - 1].text}</div>\r\n            <DialogReduxForm onSubmit={onSubmit()}/>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default DialogItem;","import React from 'react';\r\nimport classes from './Dialog.module.css';\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nconst Dialogs = (props) => {\r\n    let dialogsElements = props.dialogs.map(dialog => {\r\n        return <DialogItem name={dialog.name} key={dialog.id} id={dialog.id} avaUrl={dialog.avatar}\r\n                           savedTemplate={dialog.savedTemplate} messages={dialog.messages}\r\n                           updateAnswerMessage={props.updateAnswerMessage}\r\n                           sendMessage={props.sendMessage}/>;\r\n    });\r\n\r\n    if (!props.isAuth) return <Redirect to=\"/login\" />;\r\n\r\n    return (\r\n        <div>\r\n            <div className={classes.dialogs}>\r\n                {dialogsElements}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Dialogs;","import {Redirect} from \"react-router-dom\";\r\nimport React from \"react\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToProps = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n});\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (!this.props.isAuth) return <Redirect to=\"/login\" />;\r\n\r\n            return <Component {...this.props}/>\r\n        }\r\n    }\r\n\r\n    return connect(mapStateToProps) (RedirectComponent);\r\n}","import Dialogs from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\nimport {sendMessage} from \"../../redux/dialogs_reducer\";\r\nimport React from \"react\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\nlet mapStateToProps = state => {\r\n    return {\r\n        dialogs: state.dialogPage.dialogs\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {sendMessage}),\r\n    withAuthRedirect\r\n)(Dialogs);","import React from \"react\";\r\n\r\nconst News = (props) => {\r\n    return(\r\n        <div>\r\n            News\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default News;","import React from \"react\";\r\n\r\nconst Music = (props) => {\r\n    return(\r\n        <div>\r\n            Music\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Music;","import React from \"react\";\r\n\r\nconst Settings = (props) => {\r\n    return (\r\n        <div>\r\n            Settings\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Settings;","import React from \"react\";\r\nimport classes from './Navbar.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst Navbar = () => {\r\n    return <nav className={classes.nav}>\r\n        <div className={classes.item}>\r\n            <NavLink to=\"/profile\" activeClassName={classes.active}>Profile</NavLink>\r\n        </div>\r\n        <div className={classes.item}>\r\n            <NavLink to=\"/dialogs\" activeClassName={classes.active}>Messages</NavLink>\r\n        </div>\r\n        <div className={classes.item}>\r\n            <NavLink to=\"/users\" activeClassName={classes.active}>Users</NavLink>\r\n        </div>\r\n        <div className={classes.item}>\r\n            <NavLink to=\"/news\" activeClassName={classes.active}>News</NavLink>\r\n        </div>\r\n        <div className={classes.item}>\r\n            <NavLink to=\"/music\" activeClassName={classes.active}>Music</NavLink>\r\n        </div>\r\n        <div className={classes.item}>\r\n            <NavLink to=\"/settings\" activeClassName={classes.active}>Settings</NavLink>\r\n        </div>\r\n    </nav>\r\n}\r\n\r\nexport default Navbar;","import React from \"react\";\r\nimport classes from \"./Friend.module.css\"\r\nimport Avatar from \"../../../Avatar/Avatar\";\r\n\r\nconst Friend = (props) => {\r\n    return(\r\n        <div>\r\n            <Avatar src={props.avaUrl}/>\r\n            {props.name}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Friend;\r\n","import React from \"react\";\r\nimport classes from \"./FriendList.module.css\"\r\nimport Friend from \"./Friend/Friend\";\r\n\r\nconst FriendList = (props) => {\r\n    let friends = props.dialogs.slice(0, 3)\r\n        .map(friend => <Friend key={friend.id} name={friend.name} avaUrl={friend.avatar}/>\r\n        );\r\n\r\n    return(\r\n        <div className={classes.flist}>\r\n            <h1>Friends</h1>\r\n                {friends}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default FriendList;","import FriendList from \"./FriendList\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToProps = state => {\r\n    return {\r\n        dialogs: state.dialogPage.dialogs\r\n    }\r\n}\r\n\r\nconst FriendListContainer = connect(mapStateToProps, {})(FriendList);\r\n\r\nexport default FriendListContainer;","import React from \"react\";\r\nimport classes from \"./Sidebar.module.css\";\r\nimport Navbar from \"./Navbar/Navbar\";\r\nimport FriendListContainer from \"./FriendList/FriendListContainer\";\r\nconst Sidebar = (props) => {\r\n    return(\r\n        <div className={classes.nav}>\r\n            <Navbar/>\r\n            <FriendListContainer/>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Sidebar;","import React from \"react\";\r\nimport styles from \"../Users/Users.module.css\";\r\n\r\nconst Pagination = (props) => {\r\n    let pages = [];\r\n    let startPage = props.currentPage - 5;\r\n    if(startPage + 9 > props.pageCount)\r\n        startPage = startPage - (startPage -  props.pageCount + 9);\r\n    if(startPage <= 0)\r\n        startPage = 1;\r\n    let lastPage = startPage + 9;\r\n    if(lastPage > props.pageCount)\r\n        lastPage =  props.pageCount;\r\n    for (let i = startPage; i <= lastPage; i++) pages.push(i);\r\n\r\n    return <div>\r\n        {pages.map(p => {\r\n            return <span className={props.currentPage === p && styles.selectedPage}\r\n                         onClick={(e) => props.onPageChanged(p)}>{p}</span>\r\n        })}\r\n    </div>\r\n}\r\n\r\nexport default Pagination;","import React from \"react\";\r\nimport styles from \"./Users.module.css\";\r\nimport Avatar from \"../Avatar/Avatar\";\r\nimport userPhoto from \"../../assets/img/user.png\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport Pagination from \"../Pagination/Pagination\";\r\n\r\nconst Users = (props) => {\r\n    const pageCount = Math.ceil(props.totalUserCount / props.pageSize);\r\n\r\n    return <div>\r\n        {\r\n            props.users.map(u => <div key={u.id}>\r\n                    <span>\r\n                        <div>\r\n                            <NavLink to={'/profile/' + u.id}>\r\n                                <Avatar src={u.photos.small ? u.photos.small : userPhoto}\r\n                                        className={styles.userAvatar}/>\r\n                            </NavLink>\r\n                        </div>\r\n                        <div>\r\n                            {u.followed ? <button disabled={props.followInProgress.includes(u.id)} onClick={() => props.unfollowT(u.id)}>unfollow</button>\r\n                                : <button disabled={props.followInProgress.includes(u.id)} onClick={() => props.followT(u.id)}>follow</button>}\r\n                        </div>\r\n                    </span>\r\n                <span>\r\n                        <div>{u.name}</div>\r\n                        <div>{u.status}</div>\r\n                    </span>\r\n                <span>\r\n                        <div>{\"u.location.country\"}</div>\r\n                        <div>{\"u.location.city\"}</div>\r\n                    </span>\r\n            </div>)\r\n        }\r\n        <Pagination pageCount={pageCount} currentPage={props.currentPage}\r\n                    onPageChanged={props.onPageChanged}/>\r\n    </div>\r\n}\r\n\r\nexport default Users;","import React from \"react\";\r\nimport preloader from \"../../../assets/img/preloader.svg\";\r\n\r\nconst Preloader = (props) => {\r\n    return <div>\r\n        <img src={preloader}/>\r\n    </div>\r\n}\r\n\r\nexport default Preloader;","import React from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {\r\n    followT,\r\n    unfollowT,\r\n    loadPage\r\n} from \"../../redux/users_reducer\";\r\nimport Users from \"./Users\";\r\nimport Preloader from \"../common/Preloader/Preloader\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\nclass UserContainer extends React.Component {\r\n\r\n    componentDidMount() {\r\n        this.props.loadPage(this.props.currentPage, this.props.pageSize);\r\n    }\r\n\r\n    onPageChanged = (pageNumber) => {\r\n        this.props.loadPage(pageNumber, this.props.pageSize);\r\n    }\r\n\r\n    render() {\r\n        return <>\r\n            {this.props.isFetching && <Preloader />}\r\n            <Users {...this.props} onPageChanged = {this.onPageChanged}/>\r\n        </>\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        users: state.usersPage.users,\r\n        pageSize: state.usersPage.pageSize,\r\n        totalUserCount: state.usersPage.totalUserCount,\r\n        currentPage: state.usersPage.currentPage,\r\n        isFetching: state.usersPage.isFetching,\r\n        followInProgress: state.usersPage.followInProgress\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {followT, unfollowT, loadPage}),\r\n)(UserContainer);","import React from 'react';\r\nimport classes from './Post.module.css';\r\nimport Avatar from \"../../../Avatar/Avatar\";\r\n\r\nconst Post = (props) => {\r\n    return (\r\n        <div className={classes.item}>\r\n            <Avatar src={props.avatar}/>\r\n            {props.message}\r\n            <div>\r\n                <span>like {props.likesCount}</span>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Post;","import React from 'react';\r\nimport classes from './MyPosts.module.css';\r\nimport Post from \"./Post/Post\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {required, maxLengthCreator} from \"../../../utils/validators/validators\";\r\nimport {TextArea} from \"../../common/FormsControls/FormsControls\";\r\n\r\nconst maxLengthValid = maxLengthCreator(10);\r\n\r\nconst NewPostForm = (props) => {\r\n    return <div>\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field placeholder={\"Text\"} name={\"text\"} component={TextArea}\r\n                validate={[required, maxLengthValid]}/>\r\n            </div>\r\n            <div>\r\n                <button>Add Post</button>\r\n            </div>\r\n        </form>\r\n    </div>\r\n}\r\n\r\nconst NewPostReduxForm = reduxForm({\r\n    form: 'newPost'\r\n})(NewPostForm);\r\n\r\nconst MyPosts = (props) => {\r\n    let postElements = props.posts\r\n        .map(post => <Post key={post.id} id={post.id} message={post.message} likesCount={post.likesCount}\r\n                           avatar={props.avatar}/>);\r\n\r\n    const onSubmit = (formData) => {\r\n\r\n    }\r\n\r\n    return (\r\n        <div className={classes.postsBlock}>\r\n            <h3>My post</h3>\r\n            <div>\r\n                <NewPostReduxForm onSubmit={onSubmit}/>\r\n                <div>\r\n                    <button>Remove</button>\r\n                </div>\r\n            </div>\r\n            <div className={classes.posts}>\r\n                {postElements}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default MyPosts;","import React from \"react\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport {addPost} from \"../../../redux/profile_reducer\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        posts: state.profilePage.posts, avatar: state.profilePage.avatar, newPostText: state.profilePage.newPostText\r\n    }\r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, {addPost})(MyPosts);\r\n\r\nexport default MyPostsContainer;","import React from \"react\";\r\n\r\nclass ProfileStatus extends React.Component {\r\n    state = {\r\n        editMode: false,\r\n        status: this.props.status\r\n    }\r\n\r\n    actEditMode = () => {\r\n        this.setState({\r\n            editMode: true\r\n        });\r\n    }\r\n\r\n    deactEditMode = () => {\r\n        this.setState( {\r\n            editMode: false\r\n        });\r\n        this.props.updateStatus(this.state.status);\r\n    }\r\n\r\n    onStatusChange = (e) => {\r\n        this.setState({\r\n           status: e.currentTarget.value\r\n        });\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n        if (prevProps.status !== this.props.status)\r\n            this.setState({\r\n                status: this.props.status\r\n            });\r\n    }\r\n\r\n    render() {\r\n        return <>\r\n            {!this.state.editMode &&\r\n                <div>\r\n                    <span onDoubleClick={ this.actEditMode }>{this.props.status || \"----\" }</span>\r\n                </div>\r\n            }\r\n            {this.state.editMode &&\r\n                <div>\r\n                    <input onChange={this.onStatusChange} autoFocus={true} onBlur={ this.deactEditMode }\r\n                           value={this.state.status}/>\r\n                </div>\r\n            }\r\n        </>\r\n    }\r\n}\r\n\r\nexport default ProfileStatus;","import React from \"react\";\r\nimport classes from \"./ProfileInfo.module.css\";\r\nimport Avatar from \"../../Avatar/Avatar\";\r\nimport Preloader from \"../../common/Preloader/Preloader\";\r\nimport ProfileStatus from \"./ProfileStatus/ProfileStatus\";\r\n\r\nconst ProfileInfo = (props) => {\r\n    if (!props.profile) {\r\n        return <Preloader />\r\n    }\r\n\r\n    let contacts = Object.values(props.profile.contacts).filter(el => el).map(el => <div>{el + ';'}</div>);\r\n\r\n    return (\r\n        <div>\r\n            <div className={classes.descriptionBlock}>\r\n                <img src={props.profile.photos.large} />\r\n                <div>{props.profile.fullName}</div>\r\n                <ProfileStatus status={props.status} updateStatus={props.updateStatus}/>\r\n                <Avatar src={props.profile.lookingForAJob ? 'https://www.kathleenlovesyoga.com/wp-content/uploads/2019/07/Hire-Me.jpg'\r\n                : 'https://thumbs.dreamstime.com/b/hand-drawn-quote-made-ink-brush-lettering-design-element-says-not-interested-hand-drawn-quote-made-ink-brush-135032247.jpg'}/>\r\n                <div>{props.profile.lookingForAJobDescription}</div>\r\n                <div>Contacts: </div>\r\n                {contacts}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ProfileInfo;","import React from 'react';\r\nimport classes from './Profile.module.css';\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\n\r\nconst Profile = (props) => {\r\n    return <div>\r\n            <ProfileInfo profile={props.profile} status={props.status} updateStatus={props.updateStatus}/>\r\n            <MyPostsContainer />\r\n        </div>\r\n    };\r\n\r\nexport default Profile;","import React from \"react\";\r\nimport Profile from \"./Profile\";\r\nimport {connect} from \"react-redux\";\r\nimport {loadProfile, loadStatus, updateStatus} from \"../../redux/profile_reducer\";\r\nimport {withRouter} from \"react-router\";\r\nimport {compose} from \"redux\";\r\n\r\nclass ProfileContainer extends React.Component{\r\n\r\n    componentDidMount() {\r\n        const userId = this.props.match.params.userId ? this.props.match.params.userId : this.props.myId;\r\n        if (!userId)\r\n            this.props.history.push(\"/login\");\r\n        this.props.loadProfile(userId);\r\n        this.props.loadStatus(userId);\r\n    }\r\n\r\n    render()  {\r\n        return (\r\n            <div>\r\n                <Profile {...this.props}/>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nlet mapStateToProps = (state) => ({\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    myId: state.auth.userId,\r\n    isAuth: state.auth.isAuth\r\n});\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {loadProfile, loadStatus, updateStatus}),\r\n    withRouter\r\n)(ProfileContainer);","import React from 'react';\r\nimport classes from './Header.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\nimport Avatar from \"../Avatar/Avatar\";\r\n\r\nconst Header = (props) => {\r\n    return <header className={classes.header}>\r\n            <div className={classes.container}>\r\n                <Avatar src='https://cdn.shopify.com/shopifycloud/hatchful-web/assets/6fcc76cfd1c59f44d43a485167fb3139.png'/>\r\n                {props.profile && props.profile.photos.small && <Avatar src={props.profile.photos.small} />}\r\n                <div className={classes.loginBlock}>\r\n                    {props.isAuth\r\n                        ? <div>{props.login} <button onClick={props.Logout}>Logout</button></div>\r\n                        : <NavLink to={'/login'}>Login</NavLink>}\r\n                </div>\r\n            </div>\r\n        </header>\r\n}\r\n\r\nexport default Header;","import React from \"react\";\r\nimport Header from \"./Header\";\r\nimport {connect} from \"react-redux\";\r\nimport {Logout} from \"../../redux/auth_reducer\";\r\nimport Preloader from \"../common/Preloader/Preloader\";\r\n\r\nclass HeaderContainer extends React.Component {\r\n    render() {\r\n        return <>\r\n            {this.props.profileIsFetching && <Preloader/>}\r\n            <Header {...this.props} />\r\n        </>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isAuth: state.auth.isAuth,\r\n    login: state.auth.login,\r\n    profile: state.profilePage.profile,\r\n    profileIsFetching: state.profilePage.isFetching\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n    Logout\r\n})(HeaderContainer);","import React from \"react\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {Input} from \"../common/FormsControls/FormsControls\";\r\nimport {required} from \"../../utils/validators/validators\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport classes from \"./../common/FormsControls/FormControls.module.css\"\r\n\r\nconst LoginForm = (props) => {\r\n    return <div>\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field placeholder={\"Login\"} name={\"login\"} component={Input}\r\n                       validate={[required]}/>\r\n            </div>\r\n            <div>\r\n                <Field placeholder={\"Password\"} name={\"password\"} component={Input}\r\n                       validate={[required]} type={\"password\"}/>\r\n            </div>\r\n            <div>\r\n                <Field component={Input} name={\"rememberMe\"} type={\"checkbox\"}/> remember me\r\n            </div>\r\n            {props.error && <div className={classes.formSummaryError}>\r\n                {props.error}\r\n            </div>}\r\n            <div>\r\n                <button>Login</button>\r\n            </div>\r\n        </form>\r\n    </div>\r\n}\r\n\r\nconst LoginReduxForm = reduxForm({\r\n    form: 'login'\r\n})(LoginForm);\r\n\r\nconst Login = (props) => {\r\n    const onSubmit = (formData) => {\r\n        props.login(formData.login, formData.password, formData.rememberMe);\r\n    }\r\n    if (props.isAuth) {\r\n        return <Redirect to={\"/profile\"}/>\r\n    }\r\n\r\n    return <div>\r\n        <h1>Login</h1>\r\n        <LoginReduxForm onSubmit={onSubmit} />\r\n    </div>\r\n}\r\n\r\nexport default Login;","import React from \"react\";\r\nimport {Login as LoginThunk} from \"../../redux/auth_reducer\";\r\nimport Login from \"./Login\";\r\nimport {connect} from \"react-redux\";\r\n\r\nconst LoginContainer = (props) => {\r\n    return <div>\r\n            <Login login={props.LoginThunk} {...props}/>\r\n        </div>\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isAuth: state.auth.isAuth,\r\n})\r\n\r\nexport default connect(mapStateToProps, {LoginThunk})(LoginContainer);","import React from 'react';\r\nimport './App.css';\r\nimport DialogsContainer from \"./components/Dialogs/DialogsContainer\";\r\nimport {Route} from \"react-router-dom\";\r\nimport News from \"./components/News/News\";\r\nimport Music from \"./components/Music/Music\";\r\nimport Settings from \"./components/Settings/Settings\";\r\nimport Sidebar from \"./components/Sidebar/Sidebar\";\r\nimport UsersContainer from \"./components/Users/UsersContainer\";\r\nimport ProfileContainer from \"./components/Profile/ProfileContainer\";\r\nimport HeaderContainer from \"./components/Header/HeaderContainer\";\r\nimport LoginPage from \"./components/Login/LoginContainer\";\r\nimport {initializeThunk as initialize} from \"./redux/app_reducer\";\r\nimport {connect} from \"react-redux\";\r\nimport {compose} from \"redux\";\r\nimport { withRouter } from \"react-router\";\r\nimport Preloader from \"./components/common/Preloader/Preloader\";\r\n\r\nclass App extends React.Component {\r\n\r\n    componentDidMount() {\r\n        this.props.initialize();\r\n    }\r\n\r\n    render() {\r\n        if (!this.props.initialized)\r\n            return <Preloader />\r\n\r\n        return (\r\n            <div className=\"app-wrapper\">\r\n                <HeaderContainer/>\r\n                <Sidebar/>\r\n                <div className=\"app-wrapper-content\">\r\n                    <Route path=\"/profile/:userId?\"\r\n                           render={() => <ProfileContainer/>}/>\r\n                    <Route path=\"/dialogs\"\r\n                           render={() => <DialogsContainer/>}/>\r\n                    <Route path=\"/news\" component={News}/>\r\n                    <Route path=\"/music\" component={Music}/>\r\n                    <Route path=\"/settings\" component={Settings}/>\r\n                    <Route path=\"/users\"\r\n                           render={() => <UsersContainer/>}/>\r\n                    <Route path=\"/login\"\r\n                           render={() => <LoginPage/>}/>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapSteteTOProps = (state) => ({\r\n    initialized: state.app.initialized\r\n})\r\n\r\nexport default compose(\r\n    withRouter,\r\n    connect(mapSteteTOProps, {initialize}))(App)\r\n","import React from 'react';\r\nimport './index.css';\r\nimport store from \"./redux/redux_store\";\r\nimport ReactDOM from \"react-dom\";\r\nimport {BrowserRouter} from \"react-router-dom\";\r\nimport App from \"./App\";\r\nimport {Provider} from \"react-redux\";\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <BrowserRouter>\r\n            <Provider store={store}>\r\n                <App/>\r\n            </Provider>\r\n        </BrowserRouter>\r\n    </React.StrictMode>,\r\n    document.getElementById('root')\r\n);\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormControls_formControl__2J42X\",\"error\":\"FormControls_error__19Dxn\",\"formSummaryError\":\"FormControls_formSummaryError__2JR23\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialog\":\"DialogItem_dialog__3BNOv\",\"name\":\"DialogItem_name__1nzR3\",\"message\":\"DialogItem_message__25-fl\",\"dialogForm\":\"DialogItem_dialogForm__1sTPP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"userAvatar\":\"Users_userAvatar__1oVdT\",\"selectedPage\":\"Users_selectedPage__1QTkW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Header_container__WYCcw\",\"header\":\"Header_header__34Ekp\",\"loginBlock\":\"Header_loginBlock__2fwoE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"MyPosts_postsBlock__1JZTs\",\"posts\":\"MyPosts_posts__2xeQ0\"};"],"sourceRoot":""}